# Lambda Function

import boto3
import os
import logging
from io import BytesIO
from PIL import Image

logger = logging.getLogger()
logger.setLevel(logging.INFO)

s3 = boto3.client('s3')

def lambda_handler(event, context):
   logger.info(f"Starting lambda function")
   for record in event['Records']:
       bucket = record['s3']['bucket']['name']
       key = record['s3']['object']['key']
       logger.info(f"File '{key}' was uploaded in bucket '{bucket}'")
       try:
           image_obj = s3.get_object(Bucket=bucket, Key=key)
           image_bytes = image_obj['Body'].read()
           image = Image.open(BytesIO(image_bytes))
           new_image = image.convert('RGB')
           new_image = new_image.resize((100, 100))
           output_buffer = BytesIO()
           new_image.save(output_buffer, format="JPEG")
           output_buffer.seek(0)
           dest_bucket = os.environ['DESTINATION_BUCKET']
           new_key = f"resized-{key}"
           s3.upload_fileobj(output_buffer, dest_bucket, new_key)
           logger.info(f"File '{key}' was resized and uploaded to '{dest_bucket}' as '{new_key}'")
       except Exception as e:
           logger.error(f"Error resizing the file: {e}")
   logger.info(f"Ending lambda function")
   return {
       'statusCode': 200,
       'body': 'Lambda function completed'
   }