# Lambda Function

    import boto3
    import logging
    import json

    logger = logging.getLogger()
    logger.setLevel(logging.INFO)

    textract = boto3.client('textract')
    comprehend = boto3.client('comprehend')
    s3 = boto3.client('s3')


    def lambda_handler(event, context):
      logger.info(f"Starting lambda function")
      for record in event['Records']:
            bucket = record['s3']['bucket']['name']
            key = record['s3']['object']['key']
            logger.info(f"File '{key}' was uploaded in bucket '{bucket}'")
            try:
                response = textract.analyze_document(
                    Document={
                        'S3Object': {
                            'Bucket': bucket,
                            'Name': key
                        }
                    },
                     FeatureTypes=['FORMS']
                )

                text = ""
                for block in response['Blocks']:
                    if block['BlockType'] == 'LINE':
                        text = text + block['Text'] + "\n"

                logger.info(f"Extracted text: {text}")
                if text:
                    comprehend_response = comprehend.detect_sentiment(Text=text, LanguageCode='en')
                    sentiment = comprehend_response['Sentiment']
                    logger.info(f"Sentiment analysis: {sentiment}")
                    response = comprehend.detect_entities(Text=text, LanguageCode='en')
                    entities = response['Entities']
                    logger.info(f"Detected entities: {entities}")

            except Exception as e:
                logger.error(f"Error processing document: {e}")
      logger.info(f"Ending lambda function")
      return {
        'statusCode': 200,
        'body': 'Lambda function completed'
      }